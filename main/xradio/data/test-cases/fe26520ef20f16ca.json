{"uid":"fe26520ef20f16ca","name":"test_query_after_query_corrected[processing_set_from_custom_ms0]","fullName":"tests.unit.measurement_set.test_processing_set_xdt.TestFunctionsAfterPreviousCalls#test_query_after_query_corrected","historyId":"38f51d6dc0704c2fe341ba586d989185","time":{"start":1755718024273,"stop":1755718024378,"duration":105},"description":"\nIf the first query selects out the 'base' data_group, that can confuse functions\nlike summary. See also issue #450.\n\nThe stakeholder tests are probably a better place for a test like this, which uses\nopen(), query(), summary(), query() again, etc. (not really a unit test). But at\nthe moment we don't have stakeholder datasets with \"corrected\" or anything else than\n\"base\".\n","descriptionHtml":"<p>If the first query selects out the 'base' data_group, that can confuse functions<br />\nlike summary. See also issue #450.</p>\n<p>The stakeholder tests are probably a better place for a test like this, which uses<br />\nopen(), query(), summary(), query() again, etc. (not really a unit test). But at<br />\nthe moment we don't have stakeholder datasets with &quot;corrected&quot; or anything else than<br />\n&quot;base&quot;.</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"processing_set_from_custom_ms","time":{"start":1755718023816,"stop":1755718024272,"duration":456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nIf the first query selects out the 'base' data_group, that can confuse functions\nlike summary. See also issue #450.\n\nThe stakeholder tests are probably a better place for a test like this, which uses\nopen(), query(), summary(), query() again, etc. (not really a unit test). But at\nthe moment we don't have stakeholder datasets with \"corrected\" or anything else than\n\"base\".\n","status":"passed","steps":[],"attachments":[{"uid":"c595ae7b35476277","name":"log","source":"c595ae7b35476277.txt","type":"text/plain","size":363},{"uid":"75958f8f47d7617c","name":"stdout","source":"75958f8f47d7617c.txt","type":"text/plain","size":703}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"processing_set_from_custom_ms::0","time":{"start":1755718024510,"stop":1755718024522,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.measurement_set"},{"name":"suite","value":"test_processing_set_xdt"},{"name":"subSuite","value":"TestFunctionsAfterPreviousCalls"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2815-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.measurement_set.test_processing_set_xdt"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"processing_set_from_custom_ms","value":"{'nrows_per_ddi': 240, 'nchans': 4, 'npols': 1, 'data_cols': ['DATA', 'MODEL_DATA', 'CORRECTED_DATA'], 'SPECTRAL_WINDOW': {'0': 0}, 'POLARIZATION': {'0': 0}, 'ANTENNA': {'0': 0, '1': 1, '2': 2}, 'FIELD': {'0': 0}, 'SCAN': {'1': {'0': {'intent': 'intent#subintent'}}}, 'STATE': {'0': {'id': 0, 'intent': None}}, 'OBSERVATION': {'0': 0}, 'FEED': {'0': 0}, 'PROCESSOR': {'0': 0}, 'SOURCE': {}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"fe26520ef20f16ca.json","parameterValues":["{'nrows_per_ddi': 240, 'nchans': 4, 'npols': 1, 'data_cols': ['DATA', 'MODEL_DATA', 'CORRECTED_DATA'], 'SPECTRAL_WINDOW': {'0': 0}, 'POLARIZATION': {'0': 0}, 'ANTENNA': {'0': 0, '1': 1, '2': 2}, 'FIELD': {'0': 0}, 'SCAN': {'1': {'0': {'intent': 'intent#subintent'}}}, 'STATE': {'0': {'id': 0, 'intent': None}}, 'OBSERVATION': {'0': 0}, 'FEED': {'0': 0}, 'PROCESSOR': {'0': 0}, 'SOURCE': {}}"]}