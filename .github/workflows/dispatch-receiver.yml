name: Dispatch Receiver - Integration Test Trigger

on:
  # Listen for repository dispatch events from other repositories
  repository_dispatch:
    types: [integration-test-trigger]

jobs:
  trigger-integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Log dispatch event details
      run: |
        echo "Triggered by repository dispatch from: ${{ github.event.client_payload.repository }}"
        echo "Source ref: ${{ github.event.client_payload.ref }}"
        echo "Source SHA: ${{ github.event.client_payload.sha }}"
        echo "Triggered by: ${{ github.event.client_payload.actor }}"
        echo "Source workflow: ${{ github.event.client_payload.workflow }}"
        echo "Source run ID: ${{ github.event.client_payload.run_id }}"
        echo "Source run number: ${{ github.event.client_payload.run_number }}"
    
    - name: Trigger python-tests-allure-report workflow
      uses: actions/github-script@v6
      with:
        script: |
          const payload = context.payload.client_payload;
          
          // Trigger the python-tests-allure-report workflow
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'python-tests-allure-report.yml',
            ref: context.ref,
            inputs: {
              'source_repository': payload.repository || '',
              'source_ref': payload.ref || '',
              'source_sha': payload.sha || '',
              'source_actor': payload.actor || '',
              'source_workflow': payload.workflow || '',
              'source_run_id': payload.run_id || '',
              'source_run_number': payload.run_number || '',
              'triggered_by': 'repository_dispatch'
            }
          });
          
          console.log('Successfully triggered python-tests-allure-report workflow');
    
    - name: Notify source repository of workflow trigger
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.DISPATCH_TOKEN }}
        script: |
          const payload = context.payload.client_payload;
          
          // Post a status check back to the source repository
          if (payload && payload.repository && payload.sha) {
            const [owner, repo] = payload.repository.split('/');
            
            await github.rest.repos.createCommitStatus({
              owner: owner,
              repo: repo,
              sha: payload.sha,
              state: 'pending',
              context: 'Integration Tests (testviper)',
              description: 'Integration tests workflow triggered',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
          }
