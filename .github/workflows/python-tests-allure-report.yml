---
  name: Integration Tests with Allure Report
  
  on:
    push:
      branches: ["**"]
    pull_request:
      branches: ["**"]
  
  jobs:
    integration-tests:
      runs-on: ubuntu-latest
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install testviper dependencies
        run: |
          pwd
          ls -l
          make build-testviper
          
      - name: Clone component repositories
        run: |
          git clone https://github.com/casangi/toolviper.git
          git clone https://github.com/casangi/xradio.git
          git clone https://github.com/casangi/graphviper.git
          git clone https://github.com/casangi/astroviper.git
          ls -l
          
      - name: Install components
        run: |
          make build-main
          ls -l
          
      - name: Install Allure CLI
        run: |
          wget -qO- https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.tgz | tar -xz
          sudo mv allure-2.24.1 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
          
      - name: Run tests and generate coverage
        run: |
          python scripts/test_runner_with_coverage.py
        
      # - name: Generate Allure reports
      #   run: python scripts/report_generator.py
        
      # - name: Generate summary report
      #   run: python scripts/summary_generator.py

      # - name: Generate and publish Allure report
      #   uses: simple-elf/allure-report-action@v1
      #   if: always()
      #   with:
      #     allure_results: allure-results
      #     allure_history: allure-history
##############################################
      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
        
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history

      # - name: Generate summary report
      #   run: python scripts/summary_generator.py

      # Add this for testing on feature branches
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-preview
          path: allure-history/
          retention-days: 7

      # Deploy Allure Report to GitHub Pages (Main)
      - name: Deploy Allure Report to GitHub Pages (Main)
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      # # Deploy to GitHub Pages (Staging)
      # - name: Deploy to GitHub Pages (Staging)
      #   if: always() && github.ref != 'refs/heads/main'
      #   uses: peaceiris/actions-gh-pages@v2
      #   env:
      #     PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     PUBLISH_BRANCH: gh-pages-staging
      #     PUBLISH_DIR: allure-history
      
      # - name: Deploy to GitHub Pages (Staging) - needs the branch to exist before
      #   if: always() && github.ref != 'refs/heads/main'
      #   uses: peaceiris/actions-gh-pages@v3  # Use v3 or later
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_branch: gh-pages-staging
      #     publish_dir: allure-history
      #     force_orphan: true  # This creates the branch if it doesn't exist

      # - name: Deploy Allure Report to GitHub Pages (Staging)
      #   if: always() && github.ref != 'refs/heads/main'
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: gh-pages-staging
      #     folder: allure-history
      #     clean: true







    # ---
# name: Integration Tests with Allure Report

# on:
#   push:
#     branches: ["**"]
#   pull_request:
#     branches: ["**"]

# jobs:
#   integration-tests:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
      
#     - name: Set up Python
#       uses: actions/setup-python@v5
#       with:
#         python-version: '3.12'
        
#     - name: Install testviper dependencies
#       run: |
#         pwd
#         ls -l
#         make build-testviper
        
#     - name: Clone component repositories
#       run: |
#         git clone https://github.com/casangi/toolviper.git
#         git clone https://github.com/casangi/xradio.git
#         git clone https://github.com/casangi/graphviper.git
#         git clone https://github.com/casangi/astroviper.git
#         ls -l
        
#     - name: Install components
#       run: |
#         make build-main
#         ls -l
        
#     - name: Install Allure CLI
#       run: |
#         wget -qO- https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.tgz | tar -xz
#         sudo mv allure-2.24.1 /opt/allure
#         sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
        
#     - name: Run tests and generate coverage
#       run: |
#         python scripts/test_runner_with_coverage.py
      
#     - name: Generate Allure reports
#       run: python scripts/report_generator.py
      
#     - name: Generate summary report
#       run: python scripts/summary_generator.py

#     - name: Upload Allure Reports
#       uses: actions/upload-artifact@v4
#       if: always()
#       with:
#         name: allure-reports
#         path: allure-report/
#         retention-days: 30
        
#     - name: Deploy to GitHub Pages
#       uses: peaceiris/actions-gh-pages@v4
#       if: github.ref == 'refs/heads/main'
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: allure-report