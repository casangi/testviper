---
name: Integration Tests - Linux

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    name: >-
      Integration Tests on ${{ matrix.os }} /
      Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Clone component repositories
        run: |
          git clone https://github.com/casangi/toolviper.git
          git clone https://github.com/casangi/xradio.git
          git clone https://github.com/casangi/graphviper.git
          git clone https://github.com/casangi/astroviper.git

      - name: Install testviper dependencies
        run: pip install -r requirements/base.txt

      - name: Install components and their dependencies
        run: make build-main
#        run: pip install -r requirements/main.tx

      - name: Create test results directory
        run: mkdir -p test-results

      - name: Run testviper integration tests
        run: |
          pytest -v tests/integration/ --junitxml="test-results/testviper-test-results-${{ matrix.python-version }}.xml"
          ls -l test-results/

      - name: Setup Testspace
        uses: testspace-com/setup-testspace@v1
        with:
          domain: 'casangi'
          project: 'testviper-${{ matrix.python-version }}'

      - name: Publish testviper results to Testspace
        run: |
          testspace test-results/testviper-test-results-${{ matrix.python-version }}.xml

      - name: Run xradio tests
        run: |
          pytest -v ./xradio/tests/ --junitxml="test-results/xradio-test-results-${{ matrix.python-version }}.xml"
          ls -l test-results/

      - name: Publish xradio results to Testspace
        run: |
          testspace test-results/xradio-test-results-${{ matrix.python-version }}.xml

      - name: Run toolviper tests
        run: |
          pytest -v ./toolviper/tests/ --junitxml="test-results/toolviper-test-results-${{ matrix.python-version }}.xml"
          ls -l test-results/

      - name: Publish toolviper results to Testspace
        run: |
          testspace test-results/toolviper-test-results-${{ matrix.python-version }}.xml

      - name: Run graphviper tests
        run: |
          pytest -v ./graphviper/tests/ --junitxml="test-results/graphviper-test-results-${{ matrix.python-version }}.xml"
          ls -l test-results/

      - name: Publish graphviper results to Testspace
        run: |
          testspace test-results/graphviper-test-results-${{ matrix.python-version }}.xml

      - name: Run astroviper tests
        run: |
          pytest -v ./astroviper/tests/ --junitxml="test-results/astroviper-test-results-${{ matrix.python-version }}.xml"
          ls -l test-results/

      - name: Publish astroviper results to Testspace
        run: |
          testspace test-results/astroviper-test-results-${{ matrix.python-version }}.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            test-results/*.xml
          if-no-files-found: ignore