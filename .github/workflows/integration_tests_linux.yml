---
name: Integration Tests - Linux

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  test:
    name: >-
      Integration Tests on ${{ matrix.os }} /
      Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Clone component repositories
        run: |
          git clone https://github.com/casangi/toolviper.git
          git clone https://github.com/casangi/xradio.git
          git clone https://github.com/casangi/graphviper.git
          git clone https://github.com/casangi/astroviper.git

      - name: Install testviper dependencies
        run: pip install -r requirements/base.txt

      - name: Install components and their dependencies
        run: make build-main
#        run: pip install -r requirements/main.tx

      - name: Create test results directories
        run: |
          mkdir -p testviper-tests/${{ matrix.python-version }}
          mkdir -p toolviper-tests/${{ matrix.python-version }}
          mkdir -p graphviper-tests/${{ matrix.python-version }}
          mkdir -p astroviper-tests/${{ matrix.python-version }}

      - name: Run testviper integration tests
        run: |
          pytest -v tests/integration/ \
          --junitxml="testviper-tests/${{ matrix.python-version }}/testviper-test-results-${{ matrix.python-version }}.xml"
          ls -l testviper-tests/${{ matrix.python-version }}/

      - name: Setup Testspace
        uses: testspace-com/setup-testspace@v1
        with:
          domain: 'casangi'
          project: 'testviper-${{ matrix.python-version }}'


      - name: Create xradio test results directory
        run: mkdir -p xradio-tests/${{ matrix.python-version }}

      - name: Run xradio tests
        run: |
          pytest -v ./xradio/tests \
          --cov=xradio \
          --no-cov-on-fail \
          --doctest-modules \
          --cov-report=xml:xradio-tests/${{ matrix.python-version }}/coverage.xml \
          --junitxml="xradio-tests/${{ matrix.python-version }}/xradio-test-results-${{ matrix.python-version }}.xml" \
          --csv="xradio-test-results-${{ matrix.python-version }}.csv" --csv-columns module,class,function,status,duration,python_version

          mv "xradio-test-results-${{ matrix.python-version }}.csv" "xradio-test-results-${{ matrix.python-version }}.log"
          
          passed_count=$(grep -o 'passed' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)
          failed_count=$(grep -o 'failed' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)
          error_count=$(grep -o 'error' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)
          skipped_count=$(grep -o 'skipped' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)
          xpassed_count=$(grep -o 'xpassed' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)
          xfailed_count=$(grep -o 'xfailed' "xradio-test-results-${{ matrix.python-version }}.log" | wc -l)

          echo '${{ matrix.python-version }} Test Case Count,'$passed_count','$failed_count','$error_count','$skipped_count > "messages-xradio-${{ matrix.python-version }}.csv"
          cat "messages-${{ matrix.python-version }}.csv"
          ls -l .
          ls -l xradio-tests/${{ matrix.python-version }}

          
      - name: Publish xradio results to Testspace
        run: |
          testspace "[Python ${{ matrix.python-version }}/Unit Tests/xradio]xradio-tests/${{ matrix.python-version }}/*.xml" "xradio-test-results-${{ matrix.python-version }}.log"{"messages-xradio-${{ matrix.python-version }}.csv"} "${{ github.base_ref || github.ref_name }}"
        if: always()

      - name: Run toolviper tests
        run: |
          pytest -v ./toolviper/tests/ \
          --cov=toolviper \
          --no-cov-on-fail \
          --doctest-modules \
          --cov-report=xml:toolviper-tests/${{ matrix.python-version }}/coverage.xml \
          --junitxml="toolviper-tests/${{ matrix.python-version }}/toolviper-test-results-${{ matrix.python-version }}.xml" \
          --csv="toolviper-test-results-${{ matrix.python-version }}.csv" --csv-columns module,class,function,status,duration,python_version

          mv "toolviper-test-results-${{ matrix.python-version }}.csv" "toolviper-test-results-${{ matrix.python-version }}.log"

          passed_count=$(grep -o 'passed' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)
          failed_count=$(grep -o 'failed' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)
          error_count=$(grep -o 'error' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)
          skipped_count=$(grep -o 'skipped' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)
          xpassed_count=$(grep -o 'xpassed' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)
          xfailed_count=$(grep -o 'xfailed' "toolviper-test-results-${{ matrix.python-version }}.log" | wc -l)

          echo '${{ matrix.python-version }} Test Case Count,'$passed_count','$failed_count','$error_count','$skipped_count > "messages-toolviper-${{ matrix.python-version }}.csv"


          ls -l toolviper-tests/${{ matrix.python-version }}

      - name: Publish toolviper results to Testspace
        run: |
          testspace "[Python ${{ matrix.python-version }}/Unit Tests/toolviper]toolviper-tests/${{ matrix.python-version }}/*.xml" "toolviper-test-results-${{ matrix.python-version }}.log"{"messages-toolviper-${{ matrix.python-version }}.csv"} "${{ github.base_ref || github.ref_name }}"
        if: always()

      - name: Run graphviper tests
        run: |
          pytest -v ./graphviper/tests/ \
          --cov=graphviper \
          --no-cov-on-fail \
          --doctest-modules \
          --cov-report=xml:graphviper-tests/${{ matrix.python-version }}/coverage.xml \
          --junitxml="graphviper-tests/${{ matrix.python-version }}/graphviper-test-results-${{ matrix.python-version }}.xml"
          ls -l graphviper-tests/${{ matrix.python-version }}

      - name: Publish graphviper results to Testspace
        run: |
          testspace "[Python ${{ matrix.python-version }}/Unit Tests/graphviper]graphviper-tests/${{ matrix.python-version }}/*.xml"
        if: always()

      - name: Run astroviper tests
        run: |
          pytest -v ./astroviper/tests/ \
          --cov=astroviper \
          --no-cov-on-fail \
          --doctest-modules \
          --cov-report=xml:astroviper-tests/${{ matrix.python-version }}/coverage.xml \
          --junitxml="astroviper-tests/${{ matrix.python-version }}/astroviper-test-results-${{ matrix.python-version }}.xml"
          ls -l astroviper-tests/${{ matrix.python-version }}

      - name: Publish astroviper results to Testspace
        run: |
          testspace "[Python ${{ matrix.python-version }}/Unit Tests/astroviper]astroviper-tests/${{ matrix.python-version }}/*.xml" 
        if: always()

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            test-results/*.xml
          if-no-files-found: ignore
