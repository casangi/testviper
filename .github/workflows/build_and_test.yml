name: Makefile Integration Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  makefile-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [latest, main]
    name: Makefile IntegrationTests - ${{ matrix.channel }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Confirm working directory and Makefile presence
        run: |
          echo "Working directory: $(pwd)"
          ls -l
          cat Makefile

      - name: Install dependencies
        run: |
          make test-${{ matrix.channel }}

      - name: Install Testspace client
        run: curl -s https://testspace-client.s3.amazonaws.com/testspace-linux.tgz | tar -zxvf - && sudo mv testspace /usr/local/bin

      - name: Run testviper integration tests
        working-directory: ${{ github.workspace }}
        run: |
          pytest -v -s tests/integration/ --junitxml=test-results.xml
          ls -l

      - name: Push results to Testspace
        run: testspace "tests:test-results.xml"



# name: Makefile Integration Tests

# on:
#   push:
#     branches: ["*"]
#   pull_request:
#     branches: ["*"]

# jobs:
#   makefile-tests:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         channel: [latest]
#     name: Makefile Tests - ${{ matrix.channel }}
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.12'

#       - name: Upgrade pip
#         run: python -m pip install --upgrade pip setuptools wheel

#       - name: Run Makefile target
#         run: make test-${{ matrix.channel }}






# name: Run Tests

# on:
#   push:
#     - '**.md'
#     - '**.rst'
#   pull_request:
#     paths-ignore:
#       - '**.md'
#       - '**.rst'

# jobs:
#   test:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'
    
#     - name: Install dependencies
#       run: |
#         pip install --upgrade pip
#         make requirements/latest.txt
    
#     - name: Run tests
#       run: |
#         pytest -v -s tests \
#             --html=test-results.html --self-contained-html \
#             --cov=. --no-cov-on-fail \
#             --cov-report=html --cov-report=xml --doctest-modules \
#             --junitxml=junit.xml -o junit_family=legacy
    
#     - name: Upload coverage report
#       if: always()
#       uses: actions/upload-artifact@v4
#       with:
#         name: coverage-report
#         path: |
#           htmlcov/
#           coverage.xml
#           test-results.html
#           junit.xml
    
#     - name: Upload test results
#       if: always()
#       uses: actions/upload-artifact@v4
#       with:
#         name: test-results
#         path: |
#           **/pytest*.xml
#           **/junit*.xml
#           **/htmlcov/
